<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="initial-scale=1.0">
  <meta charset="utf-8">
  <title>Prosumer portal</title>
</head>

<body id="body">
  <h1>Prosumer portal</h1>
  <div><a href="/logout">Log out</a></div>
  <div>
    <p>
      Profile picture:<br>
      <img id="avatarImg">
      <form id="avatarForm">
        <input type="file" name="avatar" accept="image/png, image/jpeg">
      </form>
    </p>
    <p>
      Location of home (in SWEREF99 TM): 
      <input type="number" id="coord_n" value="7295937" oninput="delaySettings();"> mN, 
      <input type="number" id="coord_e" value="828018" oninput="delaySettings();"> mE<br>
    </p>
    <p>
      Current wind speed:<br>
      <span id="wind-span"></span> m/s
    </p>
    <p>
      Current household production:<br>
      <span id="prod-span"></span> kW 
    </p>
    <p>
      Current household consumption:<br>
      <span id="consumption-span"></span> kW
    </p>
    <p>
      Current net production:<br>
      <span id="net-span"></span> kW
    </p>
    <p>
      Current electricity price:<br>
      <span id="price-span"></span> kr/kW
    </p>
    <p>
      Buffer:<br>
      <span id="buffer-span"></span> kWh / 70 kWh
    </p>
    <p}>
      Produced electricity used to load buffer while overproducing:<br>
      <input type="number" id="toBuffer" value="1" oninput="delaySettings();"> %<br>
      Consumed electricity taken from buffer while underproducing:<br>
      <input type="number" id="fromBuffer" value="0" oninput="delaySettings();"> %<br>
    </p>
  </div>
  <noscript>
    <div class="jsWarning">
      This application requires a browser with JavaScript.
    </div>
  </noscript>
  <script type="text/javascript">
    let account;
    function getAccount(callback) {
      let accountReq = new XMLHttpRequest();
      accountReq.onload = () => {
        if (accountReq.status == 200) {
          account = JSON.parse(accountReq.response);
          if (callback) {
            callback();
          }
          setTimeout(getAccount, 5000);
        }
      }
      accountReq.open("GET", "/api/account");
      accountReq.send();
    }

    function setPos() {
      let x = document.getElementById('coord_e');
      let y = document.getElementById('coord_n');

      x.value = account.coordinates[0];
      y.value = account.coordinates[1];
    }

    function setQuotas() {
      let fromBuffer = document.getElementById('fromBuffer');
      let toBuffer = document.getElementById('toBuffer');

      fromBuffer.value = account.frombuffer * 100;
      toBuffer.value = account.tobuffer * 100;
    }

    let settingsTimeout;
    function pushSettings() {
      let x = parseInt(document.getElementById('coord_e').value, 10);
      let y = parseInt(document.getElementById('coord_n').value, 10);
      let fromBuffer = parseInt(document.getElementById('fromBuffer').value, 10);
      let toBuffer = parseInt(document.getElementById('toBuffer').value, 10);
      if (!isNaN(x) && !isNaN(y) && !isNaN(fromBuffer) && !isNaN(toBuffer)) {
        let settings = {
          coordinates: [x, y],
          fromBuffer: fromBuffer / 100,
          toBuffer: toBuffer / 100,
        };

        let settingsReq = new XMLHttpRequest();
        settingsReq.onload = () => getAccount(() => {
          setPos();
          setQuotas();
          updateAvatar();
        });
        settingsReq.open("POST", "/api/settings");
        settingsReq.setRequestHeader("Content-Type", "application/json");
        settingsReq.send(JSON.stringify(settings));
      } else {
        getAccount(() => setPos());
      }
    }
    function delaySettings() {
      clearTimeout(settingsTimeout);
      settingsTimeout = setTimeout(pushSettings, 1000);
    }

    function updateWind() {
      let windSpan = document.getElementById('wind-span');

      let windReq = new XMLHttpRequest();
      windReq.onload = () => {
        if (windReq.status == 200) {
          let wind = JSON.parse(windReq.response);
          windSpan.innerHTML = wind.velocity.toFixed(1);
        }
      };
      windReq.open("GET", "/api/wind");
      windReq.send();
      setTimeout(updateWind, 1000);
    }

    function updateData() {
      let prodSpan = document.getElementById('prod-span');
      let consumptionSpan = document.getElementById('consumption-span');
      let netSpan = document.getElementById('net-span');
      let bufferSpan = document.getElementById('buffer-span');

      let dataReq = new XMLHttpRequest();
      dataReq.onload = () => {
        if (dataReq.status == 200) {
          let data = JSON.parse(dataReq.response);
          prodSpan.innerHTML = data.production.toFixed(3);
          consumptionSpan.innerHTML = data.consumption.toFixed(3);
          netSpan.innerHTML = (data.production - data.consumption).toFixed(3);
          bufferSpan.innerHTML = data.buffer.toFixed(3);
        }
      };
      dataReq.open("GET", "/api/data");
      dataReq.send();
      setTimeout(updateData, 1000);
    }

    function updatePrice() {
      let priceSpan = document.getElementById('price-span');

      let priceReq = new XMLHttpRequest();
      priceReq.onload = () => {
        if (priceReq.status == 200) {
          let price = JSON.parse(priceReq.response);
          priceSpan.innerHTML = price.price.toFixed(2);
        }
      };
      priceReq.open("GET", "/api/price");
      priceReq.send();
      setTimeout(updatePrice, 1000);
    }

    function updateAvatar() {
      let avatarImg = document.getElementById('avatarImg');

      if(account.avatarurl) {
        avatarImg.src = account.avatarurl;
      }
    }

    let avatarForm = document.getElementById('avatarForm');
    avatarForm.onchange = () => {
      var formData = new FormData(avatarForm);
      
      var request = new XMLHttpRequest();
      request.onload = () => getAccount(() => {
        setPos();
        setQuotas();
        updateAvatar();
      });
      request.open("POST", "/api/avatar");
      request.send(formData);
    };

    getAccount(() => {
      setPos();
      setQuotas();
      updateWind();
      updateData();
      updatePrice();
      updateAvatar();
    });
  </script>
</body>

</html>